
// !Цвета
$colored: #ffc400;
$green: #228b22;
$black: #000;
$dark: #444;
$middle: #676767;
$light: #e9e9e9;
$patriot: #1E90FF;

// !Размеры шрифтов 
$maxWidth: 1320; 
@mixin adaptiv-font($pcSize, $mobSize) {
	$addSize: $pcSize - $mobSize;
	$addMobSize: $pcSize - $mobSize * 0.7;
	@media (max-width: 767px) {
		font-size: calc(#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth}));
	}
	@media (min-width: 767px) {
		font-size: calc(#{$mobSize + px} + #{$addSize} * (100vw / #{$maxWidth}));
  }
}

$maxWidth: 1920;
$maxWidthContainer: 1320;

@mixin adaptiv-value($property, $startSize, $minSize, $type) {
	$addSize: $startSize - $minSize;
	@if $type==1 {
		// Только если меньше контейнера
		#{$property}: $stertSize + px;
		@media (max-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
		}
	} @else if $type==2 {
		// Только если больше контейнера
		#{$property}: $stertSize + px;
		@media (min-width: #{$maxWidthContainer = px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
		}
	} @else {
		// Всегда
		#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
	}	

	// * @include adaptiv-value("padding", 50, 20, 0);
	// где
	// padding - свойство, которое должно динамически изменяться;
	// 50 - начальное (макетное) значение;
	// 20 - минимальное значение;
	// 0 - режим (см. комментарий к "$type")
}


